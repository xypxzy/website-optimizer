version: '3.9'
services:
  rabbitmq:
    image: rabbitmq:4.0.5-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # AMQP
      - '15672:15672' # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: website_optimizer
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres_user -d website_optimizer']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--appendonly', 'yes']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  parser_service:
    build: ./parser_service
    container_name: parser_service
    image: parser_service:latest
    ports:
      - '50051:50051'
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_PARSE_QUEUE: parse_queue
      RABBITMQ_ANALYZE_QUEUE: analyze_queue
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: website_optimizer
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  analyzer_service:
    build: ./analyzer_service
    container_name: analyzer_service
    image: analyzer_service:latest
    ports:
      - '50052:50052'
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_ANALYZE_QUEUE: analyze_queue
      RABBITMQ_RESULTS_QUEUE: results_queue
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: website_optimizer
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  gateway:
    build: ./gateway
    container_name: gateway
    image: gateway:latest
    depends_on:
      - parser_service
      - analyzer_service
      - rabbitmq
      - postgres
      - redis
    ports:
      - '8080:8080'
    environment:
      PARSER_SERVICE_HOST: 'parser_service'
      ANALYZER_SERVICE_HOST: 'analyzer_service'
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_PARSE_QUEUE: parse_queue
      RABBITMQ_ANALYZE_QUEUE: analyze_queue
      RABBITMQ_RESULTS_QUEUE: results_queue
      RABBITMQ_USER: user
      RABBITMQ_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: website_optimizer
      REDIS_HOST: redis
      REDIS_PORT: 6379

volumes:
  postgres_data:
  redis_data:
